security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        harsh:
            algorithm: auto
            cost: 15

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        admin_user_provider:
            entity:
                class: Aropixel\AdminBundle\Entity\User
                property: email

    role_hierarchy:
        ROLE_USER:        [ROLE_USER]
        ROLE_ADMIN:       [ROLE_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_HYPER_ADMIN: [ROLE_SUPER_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    firewalls:
        backoffice:
            context: primary_auth
            pattern: ^/
            form_login:
                provider: admin_user_provider
                login_path: aropixel_admin_security_login
                use_forward: true
                use_referer: true
                check_path: aropixel_admin_security_check
                failure_path: aropixel_admin_security_login
                default_target_path: dashboard
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000 # 1 month in seconds
                path: /
            logout:
                path: aropixel_admin_security_logout
                target: aropixel_admin_security_login
            #anonymous: true
            entry_point: Aropixel\AdminBundle\Infrastructure\Security\LoginFormAuthenticator
            custom_authenticators:
                - Aropixel\AdminBundle\Infrastructure\Security\LoginFormAuthenticator
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login$, role: PUBLIC_ACCESS }
        - { path: ^/admin/reset/, role: PUBLIC_ACCESS }
        - { path: ^/admin/activation/, role: PUBLIC_ACCESS }
        - { path: ^/admin, role: ROLE_ADMIN }
